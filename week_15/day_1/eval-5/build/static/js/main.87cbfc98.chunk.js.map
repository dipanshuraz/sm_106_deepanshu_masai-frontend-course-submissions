{"version":3,"sources":["Redux/reducer.js","Redux/action.js","Redux/store.js","Components/Home.jsx","Components/auth/Login.jsx","Components/AddTopic.jsx","Components/common/Table.jsx","Components/common/ViewTopics.jsx","Components/Edit.jsx","Routes/Routes.jsx","App.js","serviceWorker.js","index.js"],"names":["initialState","data","isAuth","username","password","reducer","state","action","type","console","log","payload","filter","item","index","userName","store","createStore","Home","props","class","head","color","btn","path","this","map","elem","className","to","Button","variant","Component","Copyright","Typography","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","connect","dispatch","classes","useState","setUserName","setPassword","Grid","container","component","CssBaseline","xs","sm","md","Paper","elevation","square","Avatar","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","e","target","value","FormControlLabel","control","Checkbox","onClick","preventDefault","obj","alert","Box","mt","AddTopic","inputHandlerTitle","setState","title","inputHandlerBody","body","inputHandlerCat","cat","inputHandlerUser","user","submitForm","addTopic","date","toLocaleDateString","htmlFor","desc","a","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","indeterminate","checked","inputProps","headCell","key","sortDirection","TableSortLabel","active","direction","property","event","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","lighten","light","text","primary","dark","flex","EnhancedTableToolbar","Toolbar","clsx","Tooltip","IconButton","aria-label","marginBottom","table","minWidth","border","clip","overflow","position","top","deleteTopic","rows","React","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","TableContainer","Table","aria-labelledby","size","newSelecteds","n","TableBody","array","cmp","stabilizedThis","el","sort","stableSort","getSorting","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","Switch","ViewTopics","Edit","Routes","exact","ViewTopic","Login","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.87cbfc98.chunk.js","sourcesContent":["import { ADD_TOPIC, DELETE_TOPIC, IS_AUTH } from \"./action\";\n\nconst initialState = {\n  data: [],\n  isAuth: false,\n  username: \"admin\",\n  password: \"admin\"\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TOPIC:\n      console.log(state.data);\n      return {\n        ...state,\n        data: [...state.data, action.payload]\n      };\n    case DELETE_TOPIC:\n      return {\n        ...state,\n        data: (state.data.filter = (item, index) => {\n          if (index != action.payload) return item;\n        })\n      };\n    case IS_AUTH:\n      if (\n        state.username == action.payload.userName &&\n        state.password == action.payload.password\n      ) {\n        console.log(\"#\");\n        return {\n          ...state,\n          isAuth: true\n        };\n      }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const ADD_TOPIC = \"ADD_TOPIC\";\nexport const DELETE_TOPIC = \"DELETE_TOPIC\";\nexport const IS_AUTH = \"IS_AUTH\";\n\nexport const addTopic = payload => ({\n  type: ADD_TOPIC,\n  payload\n});\n\nexport const deleteTopic = payload => ({\n  type: DELETE_TOPIC,\n  payload\n});\n\nexport const isAuth = payload => ({\n  type: IS_AUTH,\n  payload\n});\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\n\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [\n        {\n          class: \"col-md-6\",\n          head: \"ADD A NEW TOPIC\",\n          color: \"primary\",\n          btn: \"ADD TOPIC\",\n          path: \"/add\"\n        },\n        {\n          class: \"col-md-6 \",\n          head: \"VIEW TOPICS\",\n          color: \"primary\",\n          btn: \"VIEW TOPICS\",\n          path: \"/view\"\n        }\n      ]\n    };\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.data.map(elem => {\n          return (\n            <div className=\"col-md-6 m-5 p-5\">\n              <div className=\"{elem.class}\">\n                <h1>{elem.head}</h1>\n                <Link to={elem.path}>\n                  <Button\n                    variant=\"contained\"\n                    className=\"px-3 py-2\"\n                    color={elem.color}\n                  >\n                    {elem.btn}\n                  </Button>\n                </Link>\n              </div>\n            </div>\n          );\n        })}\n      </>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { isAuth } from \"../../Redux/action\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"100vh\"\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"dark\"\n        ? theme.palette.grey[900]\n        : theme.palette.grey[50],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\"\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nfunction Login(props) {\n  const classes = useStyles();\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleClick = e => {\n    e.preventDefault();\n    if (userName != \"\" && password != \"\") {\n      let obj = {\n        userName,\n        password\n      };\n      props.isAuth(obj);\n      alert(\"Login Success\");\n    } else {\n      alert(\"Invalid Credentials\");\n    }\n  };\n\n  return props.isAuth ? (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={e => setUserName(e.target.value)}\n              value={userName}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={handleClick}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  ) : (\n    <Redirect to=\"/\" />\n  );\n}\nconst mapStateToProps = state => ({\n  isAuth: state.isAuth\n});\n\nconst mapDispatchToProps = dispatch => ({\n  isAuth: payload => dispatch(isAuth(payload))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTopic } from \"../Redux/action\";\nimport { Redirect } from \"react-router-dom\";\n\nexport class AddTopic extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"\",\n      body: \"\",\n      cat: \"\",\n      user: \"\",\n      // date: Date.now()\n      date: new Date().toLocaleDateString()\n    };\n  }\n\n  inputHandlerTitle = e => {\n    this.setState({ title: e.target.value });\n  };\n  inputHandlerBody = e => {\n    this.setState({\n      body: e.target.value\n    });\n  };\n  inputHandlerCat = e => {\n    this.setState({ cat: e.target.value });\n  };\n  inputHandlerUser = e => {\n    this.setState({ user: e.target.value });\n  };\n  submitForm = e => {\n    e.preventDefault();\n    this.props.addTopic(this.state);\n  };\n\n  render() {\n    return (\n      <div className=\"container w-50 my-5\">\n        {this.props.isAuth ? (\n          <form action=\"\">\n            <div className=\"form-group\">\n              <label htmlFor=\"\">Title</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                value={this.state.title}\n                onChange={this.inputHandlerTitle}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"\">Body</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                value={this.state.body}\n                onChange={this.inputHandlerBody}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"\">Category</label>\n              <select\n                className=\"form-control\"\n                name=\"\"\n                id=\"\"\n                value={this.state.cat}\n                onChange={this.inputHandlerCat}\n              >\n                <option value=\"#\">Select Cat</option>\n                <option value=\"random\">random</option>\n                <option value=\"general\">General</option>\n                <option value=\"programming\">Programming</option>\n                <option value=\"algorithm\">Algorithms</option>\n                <option value=\"suggestions\">Suggestions</option>\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"\">User Details</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                value={this.state.user}\n                onChange={this.inputHandlerUser}\n              />\n            </div>\n            <div className=\"form-group\">\n              <button\n                type=\"submit\"\n                class=\"btn btn-outline-dark\"\n                onClick={this.submitForm}\n              >\n                Submit\n              </button>\n            </div>\n          </form>\n        ) : (\n          <Redirect to=\"/Login\" />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addTopic: payload => dispatch(addTopic(payload))\n});\n\nexport default connect(null, mapDispatchToProps)(AddTopic);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport { connect } from \"react-redux\";\nimport { deleteTopic } from \"../../Redux/action\";\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [\n  {\n    id: \"title\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Title\"\n  },\n  { id: \"body\", numeric: true, disablePadding: false, label: \"Body\" },\n  { id: \"cat\", numeric: true, disablePadding: false, label: \"Category\" },\n  { id: \"user\", numeric: true, disablePadding: false, label: \"User\" },\n  { id: \"date\", numeric: true, disablePadding: false, label: \"Date\" },\n  { id: \"delete\", numeric: true, disablePadding: false, label: \"Delete\" },\n  { id: \"edit\", numeric: true, disablePadding: false, label: \"Edit\" }\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark\n        },\n  title: {\n    flex: \"1 1 100%\"\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1\n  }\n}));\n\nfunction MyTable(props) {\n  const rows = props.data;\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.title)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.title}\n                      selected={isItemSelected}\n                    >\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {row.title}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.body}</TableCell>\n                      <TableCell align=\"right\">{row.cat}</TableCell>\n                      <TableCell align=\"right\">{row.user}</TableCell>\n                      <TableCell align=\"right\">{row.date}</TableCell>\n                      <TableCell align=\"right\">\n                        <button\n                          onClick={() => props.deleteTopic(index)}\n                          type=\"button\"\n                          className=\"btn btn-outline-dark\"\n                        >\n                          Delete\n                        </button>\n                      </TableCell>\n                      <TableCell align=\"right\">Edit</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteTopic: payload => dispatch(deleteTopic(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyTable);\n","import React, { Component } from \"react\";\nimport Table from \"./Table\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass ViewTopics extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render(props) {\n    console.log(this.props.isAuth);\n    return (\n      <div>{this.props.isAuth ? <Table /> : <Redirect to=\"/Login\" />}</div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  isAuth: state.isAuth\n});\n\nexport default connect(mapStateToProps, null)(ViewTopics);\n","import React, { Component } from \"react\";\n\nexport class Edit extends Component {\n  render() {\n    return <div></div>;\n  }\n}\n\nexport default Edit;\n","import React, { Component } from \"react\";\nimport { Link, Route } from \"react-router-dom\";\nimport Home from \"../Components/Home\";\nimport Login from \"../Components/auth/Login.jsx\";\nimport AddTopic from \"../Components/AddTopic.jsx\";\nimport ViewTopic from \"../Components/common/ViewTopics\";\nimport Edit from \"../Components/Edit\";\n\nexport class Routes extends Component {\n  render() {\n    return (\n      <div>\n        <nav>\n          <Link className=\"p-3 d-inline-block\" to=\"/\">\n            Home\n          </Link>\n          <Link className=\"p-3 d-inline-block\" to=\"/add\">\n            Add Topic\n          </Link>\n          <Link className=\"p-3 d-inline-block\" to=\"/view\">\n            View Topic\n          </Link>\n          <Link className=\"p-3 d-inline-block\" to=\"/login\">\n            Login\n          </Link>\n        </nav>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/add\" component={AddTopic} />\n        <Route path=\"/view\" component={ViewTopic} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/edit:id\" component={Edit} />\n      </div>\n    );\n  }\n}\n\nexport default Routes;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport Routes from \"./Routes/Routes\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Routes />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}